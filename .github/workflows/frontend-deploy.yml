name: Frontend CD - Deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      bucket_name:
        required: true
        type: string
      website_url:
        required: true
        type: string
      api_url:
        required: true
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      DISCORD_WEBHOOK:
        required: true
      CLOUDFRONT_ID:
        required: true

env:
  NODE_VERSION: "22.1.0"
  AWS_REGION: ap-southeast-2

jobs:
  deploy:
    environment:
      name: ${{ inputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Frontend AWS
        uses: ./common-action/setup-frontend-aws
        with:
          node_version: ${{ env.NODE_VERSION }}
          aws_region: ${{ env.AWS_REGION }}
          role_arn: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/oidc-${{ vars.REPO_ORG_ABBR }}-${{ github.event.repository.name }}
          api_url: ${{ inputs.api_url }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ inputs.bucket_name }} \
          --delete \
          --cache-control "max-age=31536000,public"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_ID }} \
          --paths "/*"

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          retries=3
          while [ $retries -gt 0 ]; do
            response_code=$(curl -s -o /dev/null -w "%{http_code}" ${{ inputs.website_url }})
            if [[ $response_code =~ ^2 ]]; then
              echo "✅ Deployment verified!"
              exit 0
            fi
            retries=$((retries-1))
            [ $retries -gt 0 ] && sleep 10
          done
          exit 1

      - name: Notify Discord
        if: always()
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          thread-id: "1330422313769893938"
          username: "Frontend Deploy Bot"
          content: |
            ${{ job.status == 'success' && '✅' || '❌' }} Frontend ${{ inputs.environment }} Deployment ${{ job.status == 'success' && 'Successful!' || 'Failed!' }}
            **Environment:** ${{ inputs.environment }}
            **Build:** ${{ github.run_number }}
            **Status:** ${{ job.status }}
            **Website:** ${{ inputs.website_url }}
            ${{ job.status != 'success' && '<@&1315850473391001674>' || '' }}
