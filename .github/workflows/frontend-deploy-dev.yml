name: Frontend CD - Dev Deployment

on:
  workflow_run:
    workflows: ["Frontend CI - Build & Test"]
    types:
      - completed
    branches: [ dev ]
  workflow_dispatch:
    

permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-dev:
    environment:
      name: development
    env:
      AWS_REGION: ap-southeast-2
      AWS_DEV_ACCOUNT: ${{ secrets.AWS_DEV_ACCOUNT }}
      DEV_FRONTEND_BUCKET: "dev-foundation-innovatefuture-dev-frontend-static"
      DEV_CLOUDFRONT_ID: "E1ZS25NCQ6M256"
      DEV_WEBSITE_URL: "https://dev.innovatefuture.foundation"
      DEV_API_URL: "https://dev.innovatefuture.foundation"
      node_version: "22.1.0"
    
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Checkout Common Action
        uses: actions/checkout@v4
        with:
          repository: Innovate-Future-Foundation/common-action
          path: common-action

      - name: Setup Frontend Environment
        uses: ./common-action/setup-frontend-aws
        with:
          node_version: ${{ env.node_version }}
          aws_region: ${{ secrets.AWS_REGION }}
          role_arn: "arn:aws:iam::${{ secrets.AWS_DEV_ACCOUNT }}:role/oidc-${{ vars.REPO_ORG_ABBR }}-${{ github.event.repository.name }}"
          api_url: ${{ secrets.DEV_API_URL }}

      - name: Download Production Assets
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist-${{ github.run_number }}
          path: dist

      - name: Deploy to Dev S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.DEV_FRONTEND_BUCKET }} \
          --delete \
          --cache-control "max-age=31536000,public"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.DEV_CLOUDFRONT_ID }} \
          --paths "/*"

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          retries=3
          while [ $retries -gt 0 ]; do
            response_code=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.DEV_WEBSITE_URL }})
            if [[ $response_code =~ ^2 ]]; then
              echo "✅ Deployment verified!"
              exit 0
            fi
            retries=$((retries-1))
            [ $retries -gt 0 ] && sleep 10
          done
          exit 1

      - name: Notify Discord
        if: always()
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DEV_PR_DISCORD_WEBHOOK }}
          thread-id: "1330422313769893938"
          username: "Frontend Deploy Bot"
          content: |
            ${{ job.status == 'success' && '✅ Frontend Dev Deployment Successful!' || '❌ Frontend Dev Deployment Failed!' }}
            **Environment:** Development
            **Build:** ${{ github.run_number }}
            **Status:** ${{ job.status }}
            **Website:** ${{ secrets.DEV_WEBSITE_URL }}
            ${{ job.status != 'success' && '<@&1315850473391001674>' || '' }} 